# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /         controllers.PageController.index

# Session Routes
GET    /login     controllers.SessionController.newSession
POST   /login     controllers.SessionController.createSession
GET    /logout    controllers.SessionController.destroySession


# User Routes
GET    /users                controllers.UserController.index
GET    /sign_up              controllers.UserController.newUser
GET    /users/:id            controllers.UserController.showUser(id: Long)
POST   /users                controllers.UserController.createUser
GET    /users/:id/edit       controllers.UserController.editUser(id: Long)
POST   /users/:id            controllers.UserController.updateUser(id: Long)
GET    /users/:id/delete     controllers.UserController.deleteUser(id: Long)

# Course Routes
GET    /courses              controllers.CourseController.index
GET    /courses/new          controllers.CourseController.newCourse
GET    /courses/:id          controllers.CourseController.showCourse(id: Long, programme: String ?= "%", intake: String ?= "%")
POST   /courses              controllers.CourseController.createCourse
GET    /courses/:id/edit     controllers.CourseController.editCourse(id: Long)
POST   /courses/:id          controllers.CourseController.updateCourse(id: Long)
GET    /courses/:id/delete   controllers.CourseController.deleteCourse(id: Long)
GET    /courses/:id/export   controllers.CourseController.export(id: Long, programme: String ?= "%", intake: String ?= "%")
GET    /courses/:id/filter   controllers.CourseController.filterSetting(id: Long)
GET    /courses/:id/filter/edit controllers.CourseController.editSetting(id: Long)
POST   /courses/:id/filter    controllers.CourseController.updateSetting(id: Long)

# CourseStudent Routes
GET    /courses/:id/add                   controllers.CourseStudentController.newCourseStudent(id: Long)
POST   /courses/:id/students              controllers.CourseStudentController.create(id: Long)
POST   /courses/:id/students/:studentId   controllers.CourseStudentController.delete(id: Long, studentId: Long)

# Student Routes
GET    /students             controllers.StudentController.index
GET    /students/new         controllers.StudentController.newStudent
GET    /students/:id         controllers.StudentController.show(id: Long)
POST   /students             controllers.StudentController.create
GET    /students/:id/edit    controllers.StudentController.edit(id: Long)
POST   /students/:id         controllers.StudentController.update(id: Long)
GET    /students/:id/delete  controllers.StudentController.delete(id: Long)

# Upload Routes
POST  /uploads/:id                     controllers.UploadController.upload(id: Long)
GET   /courses/:id/fetch               controllers.UploadController.fetch(id: Long)

# Attendance Routes
GET   /attendances/:id                 controllers.AttendanceController.index(id: Long)
GET   /attendances/:id/new             controllers.AttendanceController.newAttendance(id: Long)
GET   /attendances/:id/group/          controllers.AttendanceController.fetch(id: Long, groupId: Int, date: String)

# Coursework Routes
GET   /courseworks/:id                 controllers.CourseworkController.index(id: Long)
GET   /courseworks/:id/new              controllers.CourseworkController.newImport(id: Long)
POST  /courseworks/:id/save             controllers.CourseworkController.save(id: Long)
GET   /courseworks/:id/selection        controllers.CourseworkController.selection(id: Long)
POST  /courseworks/:id/save_selection   controllers.CourseworkController.saveSelection(id: Long)

# Exam Routes
GET   /exam/:id                        controllers.ExamController.index(id: Long)
GET   /examination/:id                 controllers.ExaminationController.index(id: Long)
GET   /exam/:id/new                    controllers.ExamController.newImport(id: Long)
POST  /exam/:id/save                   controllers.ExamController.save(id: Long)


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                  controllers.Assets.versioned(path="/public", file: Asset)
